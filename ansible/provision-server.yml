# ansible/provision-server.yml
---
- name: Provision Lightsail instance for application deployment
  hosts: all
  become: yes
  vars:
    app_dir: /opt/app
    docker_compose_version: "2.24.0"
    
  tasks:
    - name: Update apt cache
      apt:
        update_cache: yes
        cache_valid_time: 3600

    - name: Install required system packages
      apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg
          - lsb-release
          - software-properties-common
          - python3-pip
          - git
        state: present

    - name: Add Docker GPG key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker repository
      apt_repository:
        repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
        state: present

    - name: Install Docker
      apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
        state: present
        update_cache: yes

    - name: Start and enable Docker service
      systemd:
        name: docker
        state: started
        enabled: yes

    - name: Add ubuntu user to docker group
      user:
        name: ubuntu
        groups: docker
        append: yes

    - name: Install Docker Compose
      get_url:
        url: "https://github.com/docker/compose/releases/download/v{{ docker_compose_version }}/docker-compose-linux-x86_64"
        dest: /usr/local/bin/docker-compose
        mode: '0755'

    - name: Create application directory
      file:
        path: "{{ app_dir }}"
        state: directory
        owner: ubuntu
        group: ubuntu
        mode: '0755'

    - name: Create migrations directory
      file:
        path: "{{ app_dir }}/migrations"
        state: directory
        owner: ubuntu
        group: ubuntu
        mode: '0755'

    - name: Create docker compose directory
      file:
        path: "{{ app_dir }}/compose"
        state: directory
        owner: ubuntu
        group: ubuntu
        mode: '0755'


    - name: Create logs directory
      file:
        path: "{{ app_dir }}/logs"
        state: directory
        owner: ubuntu
        group: ubuntu
        mode: '0777'  # Allow containers to write logs

    - name: Install Python Docker SDK
      pip:
        name:
          - docker
          - docker-compose
        state: present

    - name: Log in to GitHub Container Registry
      community.docker.docker_login:
        registry_url: ghcr.io
        username: "{{ github_username }}"
        password: "{{ github_token }}"
      when: github_username is defined and github_token is defined

    - name: Create systemd service for application
      template:
        src: templates/app.service.j2
        dest: /etc/systemd/system/app.service
        mode: '0644'
      notify: reload systemd

    - name: Configure UFW firewall
      ufw:
        rule: allow
        port: "{{ item }}"
        proto: tcp
      loop:
        - '22'    # SSH
        - '80'    # HTTP
        - '443'   # HTTPS
        - '8080'  # Application (adjust as needed)

    - name: Enable UFW
      ufw:
        state: enabled
        policy: deny

    - name: Set up log rotation for application logs
      copy:
        dest: /etc/logrotate.d/app
        content: |
          /opt/app/logs/*.log {
              daily
              missingok
              rotate 14
              compress
              delaycompress
              notifempty
              create 0640 ubuntu ubuntu
              sharedscripts
          }

  handlers:
    - name: reload systemd
      systemd:
        daemon_reload: yes
